{"version":3,"file":"static/js/752.981b534e.chunk.js","mappings":"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","sources":["utils/icon.ts","view/page/components/f.screen.tsx","view/page/components/about.tsx","view/page/components/news.tsx","view/page/components/market.tsx","view/page/components/right.tsx","view/page/components/roadmap.tsx","view/page/index.tsx"],"sourcesContent":["import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nconst IconFont = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/c/font_4489925_us9waqbhhf.js'\r\n});\r\nexport default IconFont;","import { ReactElement } from \"react\";\r\nimport IconFont from \"../../../utils/icon\";\r\n\r\ninterface Side {\r\n    icon: string,\r\n    url: string\r\n}\r\n\r\nconst FirstScreenWapper = (): ReactElement => {\r\n    const Sides: Side[] = [\r\n        {\r\n            icon: 'icon-tuite',\r\n            url: 'https://twitter.com/MetaCollabWin'\r\n        },\r\n        {\r\n            icon: 'icon-discord1',\r\n            url: 'https://discord.com/invite/5sCg6kVt'\r\n        },\r\n        {\r\n            icon: 'icon-telegram1',\r\n            url: 'https://t.me/MetaCollabWin'\r\n        },\r\n    ]\r\n    return (\r\n        <div className=\"first-screen-wapper\">\r\n            <img className=\"logo-tag\" src={require('../../../assets/images/logo.png')} alt=\"\" />\r\n            <div className=\"f-title\">\r\n                <p>{\"The world's first blockchain game\".toLocaleUpperCase()}</p>\r\n                <p>{\"combining Meta and RWA!\".toUpperCase()}</p>\r\n            </div>\r\n            <div className=\"sides-list\">\r\n                <ul>\r\n                    {\r\n                        Sides.map((item: Side, index: number) => {\r\n                            return (\r\n                                <li key={index} onClick={() => {\r\n                                    window.open(item.url)\r\n                                }}>\r\n                                    <IconFont type={item.icon} />\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default FirstScreenWapper;\r\n// export default LaunchPadWapper;","import { ReactElement } from \"react\";\r\n\r\nconst AboutWapper = (): ReactElement => {\r\n    return (\r\n        <div className=\"about-wapper\">\r\n            <p className=\"about-title\">\r\n                {'El Salvador'.toLocaleUpperCase()}\r\n            </p>\r\n            <p className=\"about-text\">\r\n                On September 8, 2021, in the Blue Hall of the Legislative Assembly of El Salvador,\r\n                Bitcoin officially became the national legal tender of El Salvador. This is the first\r\n                country in the world to legislate Bitcoin as a legal tender, which means that the\r\n                encryption world and the real world are gradually integrating. The beginning of\r\n                cross-integration is a great change in El Salvador and one of the greatest\r\n                changes in human history. On November 21 of the same year, El Salvador\r\n                announced the construction of the world's first \"Bitcoin City\", which means that\r\n                El Salvador is one of the first countries to implement digital transformation, and\r\n                humans are also actively migrating from the physical world to the digital world.\r\n                Bitcoin City will be a city of the future that combines reality and reality, and\r\n                Bitcoin City’s digital identity will also be one of the most valuable and most\r\n                promising digital identities in the world.\r\n            </p>\r\n            <p className=\"about-text\">\r\n                The El Salvador Volcano Bitcoin City is planned to be located in the Gulf of Fonseca\r\n                on the southern coast, with the Conchagua Volcano in the background. Based on the\r\n                general policy of cryptocurrency, the national stable currency policy, the most\r\n                blockchain-friendly country in the world, the volcano-driven Bitcoin city has a full\r\n                range of cryptocurrency life application scenarios, perfectly combining the virtual\r\n                economy with the real economy, which is undoubtedly The most utopian city plan\r\n                today, in the future Bitcoin City will become a benchmark and demonstrative Web3.0\r\n                city in the world, a metaverse city that combines reality and reality. Blockstream’s\r\n                Samson Mow told Fortune magazine, “It will become the ‘financial center of the world’\r\n                and the ‘Singapore of Latin America,’ and everyone who invests in it will become\r\n                very wealthy.\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AboutWapper;","import { ReactElement } from \"react\";\r\nimport IconFont from \"../../../utils/icon\";\r\n\r\ninterface News {\r\n    date: string,\r\n    poster:string,\r\n    content: string,\r\n    url:string\r\n}\r\n\r\nconst NewsWapper = (): ReactElement => {\r\n    const news: News[] = [\r\n        {\r\n\r\n            date: 'MARCH 1,2024',\r\n            poster:'https://assets-global.website-files.com/640f3e3ec87e61dbaa49c418/65e1cd0cff4b8312a2505f1a_0301.jpg',\r\n            content: 'Gerrtings to our mothly recap,where we look back at the developments from Dark Frontiers last month.Februarg was a month of significant transformtion and exciting partnerships for Dark Frontiers ,marking another chapter of growth and',\r\n            url:'https://www.darkfrontiers.com/articles/dark-frontiers-monthly-recap-february-2024'\r\n        },\r\n        {\r\n            date: 'FEBRUARY 27,2024',\r\n            poster:'https://assets-global.website-files.com/640f3e3ec87e61dbaa49c418/65df0825d177dfbc97a69b4e_0227(3).jpg',\r\n            content: \"Is the expanses of Dark Frontiers,players find themselves ensnared in a web of lore that spans ancient myths,cosmic battles,and untold secrets.The story's architect plays a pivtoal role is shapingthe immersive narrative that captivates players'\",\r\n            url:'https://www.darkfrontiers.com/articles/meet-the-lore-writer-behind-dark-frontiers'\r\n        }\r\n    ]\r\n    return (\r\n        <div className=\"news-wapper\">\r\n            <p className=\"news-title\">News</p>\r\n            <div className=\"news-list\">\r\n                <ul>\r\n                    {\r\n                        news.map((item: News, index: number) => {\r\n                            return (\r\n                                <li key={index}>\r\n                                    <div className=\"top-left-line\"></div>\r\n                                    <div className=\"item-inner\">\r\n                                        <div className=\"poster-box\">\r\n                                            <img src={item.poster} alt=\"\" />\r\n                                            <div className=\"mask-box\"></div>\r\n                                        </div>\r\n                                        <p className=\"date-text\">{item.date}</p>\r\n                                        <div className=\"content-box\">\r\n                                            <p className=\"c-text\">{item.content}</p>\r\n                                            <div className=\"mask-box\"></div>\r\n                                        </div>\r\n                                        <p className=\"read-more\" onClick={() => {\r\n                                            window.open(item.url)\r\n                                        }}>\r\n                                            {'Read more'.toLocaleUpperCase()}\r\n                                            <IconFont type=\"icon-right\" />\r\n                                            <IconFont type=\"icon-right\" />\r\n                                            <IconFont type=\"icon-right\" />\r\n                                        </p>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NewsWapper;","import { ReactElement } from \"react\";\r\n\r\nconst MarketWapper = () : ReactElement => {\r\n    return (\r\n        <div className=\"market-wapper\">\r\n            <p>{'Coming Soon'.toUpperCase()}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MarketWapper;","import { ReactElement } from \"react\";\r\n\r\nconst RightWapper = (): ReactElement => {\r\n    return (\r\n        <div className=\"right-wapper\">\r\n            <p className=\"right-remark\">\r\n                MetaCollabWin is an adventure simulation game themed around constructing the Bitcoin City in El Salvador.\r\n                Players engage in activities such as participating in the city's construction, eliminating pirates, and earning\r\n                generous in-game rewards. In addition to game items, players also have the chance to acquire MCW tokens,\r\n                Salvadoran government bonds DNB, XDNB, digital identities, and various other mysterious rewards. By\r\n                joining the ranks of the Bitcoin City, players can not only profit from the game but also unlock\r\n                opportunities for wealth appreciation and exciting glory and benefits in the future. Come join the game\r\n                and embark on an exhilarating and fun adventure journey!\r\n            </p>\r\n            <div className=\"join-us\">\r\n                <div className=\"left-title\">\r\n                    <p>Join The</p>\r\n                    <p>MetaCollabWin</p>\r\n                </div>\r\n                <div className=\"submit-box\">\r\n                    <div className=\"inp-box\">\r\n                        <input type=\"text\" placeholder=\"Enter email address\"/>\r\n                        <button>Submit</button>\r\n                    </div>\r\n                    <p className=\"submit-remark\">Subscribe to our newletter to get the news and updates on metacollawin !</p>\r\n                </div>\r\n            </div>\r\n            <p className=\"right-remrak-b\">© 2024 metacollawin. ALL RIGHTS RESERVED.</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RightWapper;","import { ReactElement } from \"react\";\r\n\r\nconst RoadMapWapper = () : ReactElement => {\r\n    return (\r\n        <div className=\"roadmap-wapper\">\r\n            <p>Under&nbsp;construction...</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RoadMapWapper;","import { ReactElement, ReactNode, useState } from \"react\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Mousewheel } from 'swiper/modules';\r\nimport 'swiper/css';\r\nimport 'swiper/css/pagination';\r\nimport './index.scss'\r\nimport FirstScreenWapper from \"./components/f.screen\";\r\nimport AboutWapper from \"./components/about\";\r\nimport NewsWapper from \"./components/news\";\r\nimport MarketView from './components/market';\r\nimport RightWapper from './components/right';\r\nimport RoadMapWapper from './components/roadmap';\r\n\r\nconst PageView = (): ReactElement<ReactNode> => {\r\n    const tag: string[] = ['LAUNCHPAD', 'ABOUT', 'NEWS', 'MARKET', 'ROADMAP'];\r\n    const [swiper, setSwiper] = useState<any>();\r\n    const CuestomControl = () => {\r\n        return (\r\n            <div className=\"custom-control\">\r\n                <ul>\r\n                    {\r\n                        tag.map((item: string, index: number) => {\r\n                            return (\r\n                                <li key={index} onClick={() => {\r\n                                    switch (index) {\r\n                                        case 0:\r\n                                            return\r\n                                        case 1:\r\n                                            swiper.slideTo(1)\r\n                                            break;\r\n                                        case 2:\r\n                                            swiper.slideTo(2)\r\n                                            break;\r\n                                        case 3:\r\n                                            swiper.slideTo(3)\r\n                                            break;\r\n                                        case 4:\r\n                                            swiper.slideTo(4)\r\n                                            break;\r\n                                        default:\r\n                                            swiper.slideTo(0)\r\n                                    }\r\n                                }}>{item}</li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"page-view\">\r\n            <Swiper\r\n                direction={'vertical'}\r\n                mousewheel={true}\r\n                slidesPerView={1}\r\n                speed={800}\r\n                modules={[Mousewheel]}\r\n                className=\"custom-swiper-page\"\r\n                onSwiper={(swiper:any) => {\r\n                    setSwiper(swiper)\r\n                }}\r\n            >\r\n                <SwiperSlide>\r\n                    <FirstScreenWapper/>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <AboutWapper/>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <NewsWapper/>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <MarketView/>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <RoadMapWapper/>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <RightWapper/>\r\n                </SwiperSlide>\r\n            </Swiper>\r\n            <CuestomControl />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PageView;"],"names":["createFromIconfontCN","scriptUrl","FirstScreenWapper","_jsxs","className","children","_jsx","src","require","alt","toLocaleUpperCase","toUpperCase","icon","url","map","item","index","onClick","window","open","IconFont","type","AboutWapper","NewsWapper","date","poster","content","MarketWapper","RightWapper","placeholder","RoadMapWapper","PageView","tag","swiper","setSwiper","useState","CuestomControl","slideTo","Swiper","direction","mousewheel","slidesPerView","speed","modules","Mousewheel","onSwiper","SwiperSlide","MarketView"],"sourceRoot":""}